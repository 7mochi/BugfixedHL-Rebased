//
// BugfixedHl-Rebased offset file. Generated using amxx-offset-generator.
//

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CBaseTurret"
			{
				"Offsets"
				{
					// WIN: float m_flMaxSpin
					// LIN: float m_flMaxSpin
					"m_flMaxSpin"
					{
						"type" "float"
						"windows" "664"
						"linux" "684"
					}

					// WIN: int m_iSpin
					// LIN: int m_iSpin
					"m_iSpin"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "668"
						"linux" "688"
					}

					// WIN: CSprite *m_pEyeGlow
					// LIN: CSprite *m_pEyeGlow
					"m_pEyeGlow"
					{
						"type" "classptr"
						"windows" "672"
						"linux" "692"
					}

					// WIN: int m_eyeBrightness
					// LIN: int m_eyeBrightness
					"m_eyeBrightness"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "676"
						"linux" "696"
					}

					// WIN: int m_iDeployHeight
					// LIN: int m_iDeployHeight
					"m_iDeployHeight"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "680"
						"linux" "700"
					}

					// WIN: int m_iRetractHeight
					// LIN: int m_iRetractHeight
					"m_iRetractHeight"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "684"
						"linux" "704"
					}

					// WIN: int m_iMinPitch
					// LIN: int m_iMinPitch
					"m_iMinPitch"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "688"
						"linux" "708"
					}

					// WIN: int m_iBaseTurnRate
					// LIN: int m_iBaseTurnRate
					"m_iBaseTurnRate"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "692"
						"linux" "712"
					}

					// WIN: float m_fTurnRate
					// LIN: float m_fTurnRate
					"m_fTurnRate"
					{
						"type" "float"
						"windows" "696"
						"linux" "716"
					}

					// WIN: int m_iOrientation
					// LIN: int m_iOrientation
					"m_iOrientation"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "700"
						"linux" "720"
					}

					// WIN: int m_iOn
					// LIN: int m_iOn
					"m_iOn"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "704"
						"linux" "724"
					}

					// WIN: int m_fBeserk
					// LIN: int m_fBeserk
					"m_fBeserk"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "708"
						"linux" "728"
					}

					// WIN: int m_iAutoStart
					// LIN: int m_iAutoStart
					"m_iAutoStart"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "712"
						"linux" "732"
					}

					// WIN: Vector m_vecLastSight
					// LIN: Vector m_vecLastSight
					"m_vecLastSight"
					{
						"type" "vector"
						"windows" "716"
						"linux" "736"
					}

					// WIN: float m_flLastSight
					// LIN: float m_flLastSight
					"m_flLastSight"
					{
						"type" "float"
						"windows" "728"
						"linux" "748"
					}

					// WIN: float m_flMaxWait
					// LIN: float m_flMaxWait
					"m_flMaxWait"
					{
						"type" "float"
						"windows" "732"
						"linux" "752"
					}

					// WIN: int m_iSearchSpeed
					// LIN: int m_iSearchSpeed
					"m_iSearchSpeed"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "736"
						"linux" "756"
					}

					// WIN: float m_flStartYaw
					// LIN: float m_flStartYaw
					"m_flStartYaw"
					{
						"type" "float"
						"windows" "740"
						"linux" "760"
					}

					// WIN: Vector m_vecCurAngles
					// LIN: Vector m_vecCurAngles
					"m_vecCurAngles"
					{
						"type" "vector"
						"windows" "744"
						"linux" "764"
					}

					// WIN: Vector m_vecGoalAngles
					// LIN: Vector m_vecGoalAngles
					"m_vecGoalAngles"
					{
						"type" "vector"
						"windows" "756"
						"linux" "776"
					}

					// WIN: float m_flPingTime
					// LIN: float m_flPingTime
					"m_flPingTime"
					{
						"type" "float"
						"windows" "768"
						"linux" "788"
					}

					// WIN: float m_flSpinUpTime
					// LIN: float m_flSpinUpTime
					"m_flSpinUpTime"
					{
						"type" "float"
						"windows" "772"
						"linux" "792"
					}

				}
			}
		}
	}
}

//
// Class Hierarchy:
// -
//	CBaseAnimating
//		CBaseDelay
//			CBaseEntity
//				CBaseMonster
//					CBaseToggle
//						CBaseTurret
//							CMiniTurret
//							CSentry
//							CTurret
//
