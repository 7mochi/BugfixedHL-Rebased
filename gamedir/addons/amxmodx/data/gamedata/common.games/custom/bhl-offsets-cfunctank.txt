//
// BugfixedHl-Rebased offset file. Generated using amxx-offset-generator.
//

"Games"
{
	"#default"
	{
		"Classes"
		{
			"CFuncTank"
			{
				"Offsets"
				{
					// WIN: CBasePlayer *m_pController
					// LIN: CBasePlayer *m_pController
					"m_pController"
					{
						"type" "classptr"
						"windows" "84"
						"linux" "100"
					}

					// WIN: float m_flNextAttack
					// LIN: float m_flNextAttack
					"m_flNextAttack"
					{
						"type" "float"
						"windows" "88"
						"linux" "104"
					}

					// WIN: Vector m_vecControllerUsePos
					// LIN: Vector m_vecControllerUsePos
					"m_vecControllerUsePos"
					{
						"type" "vector"
						"windows" "92"
						"linux" "108"
					}

					// WIN: float m_yawCenter
					// LIN: float m_yawCenter
					"m_yawCenter"
					{
						"type" "float"
						"windows" "104"
						"linux" "120"
					}

					// WIN: float m_yawRate
					// LIN: float m_yawRate
					"m_yawRate"
					{
						"type" "float"
						"windows" "108"
						"linux" "124"
					}

					// WIN: float m_yawRange
					// LIN: float m_yawRange
					"m_yawRange"
					{
						"type" "float"
						"windows" "112"
						"linux" "128"
					}

					// WIN: float m_yawTolerance
					// LIN: float m_yawTolerance
					"m_yawTolerance"
					{
						"type" "float"
						"windows" "116"
						"linux" "132"
					}

					// WIN: float m_pitchCenter
					// LIN: float m_pitchCenter
					"m_pitchCenter"
					{
						"type" "float"
						"windows" "120"
						"linux" "136"
					}

					// WIN: float m_pitchRate
					// LIN: float m_pitchRate
					"m_pitchRate"
					{
						"type" "float"
						"windows" "124"
						"linux" "140"
					}

					// WIN: float m_pitchRange
					// LIN: float m_pitchRange
					"m_pitchRange"
					{
						"type" "float"
						"windows" "128"
						"linux" "144"
					}

					// WIN: float m_pitchTolerance
					// LIN: float m_pitchTolerance
					"m_pitchTolerance"
					{
						"type" "float"
						"windows" "132"
						"linux" "148"
					}

					// WIN: float m_fireLast
					// LIN: float m_fireLast
					"m_fireLast"
					{
						"type" "float"
						"windows" "136"
						"linux" "152"
					}

					// WIN: float m_fireRate
					// LIN: float m_fireRate
					"m_fireRate"
					{
						"type" "float"
						"windows" "140"
						"linux" "156"
					}

					// WIN: float m_lastSightTime
					// LIN: float m_lastSightTime
					"m_lastSightTime"
					{
						"type" "float"
						"windows" "144"
						"linux" "160"
					}

					// WIN: float m_persist
					// LIN: float m_persist
					"m_persist"
					{
						"type" "float"
						"windows" "148"
						"linux" "164"
					}

					// WIN: float m_minRange
					// LIN: float m_minRange
					"m_minRange"
					{
						"type" "float"
						"windows" "152"
						"linux" "168"
					}

					// WIN: float m_maxRange
					// LIN: float m_maxRange
					"m_maxRange"
					{
						"type" "float"
						"windows" "156"
						"linux" "172"
					}

					// WIN: Vector m_barrelPos
					// LIN: Vector m_barrelPos
					"m_barrelPos"
					{
						"type" "vector"
						"windows" "160"
						"linux" "176"
					}

					// WIN: float m_spriteScale
					// LIN: float m_spriteScale
					"m_spriteScale"
					{
						"type" "float"
						"windows" "172"
						"linux" "188"
					}

					// WIN: string_t m_iszSpriteSmoke
					// LIN: int m_iszSpriteSmoke
					"m_iszSpriteSmoke"
					{
						"type" "stringint"
						"windows" "176"
						"linux" "192"
					}

					// WIN: string_t m_iszSpriteFlash
					// LIN: int m_iszSpriteFlash
					"m_iszSpriteFlash"
					{
						"type" "stringint"
						"windows" "180"
						"linux" "196"
					}

					// WIN: TANKBULLET m_bulletType
					// LIN: TANKBULLET m_bulletType
					"m_bulletType"
					{
						"type" "integer"
						"windows" "184"
						"linux" "200"
					}

					// WIN: int m_iBulletDamage
					// LIN: int m_iBulletDamage
					"m_iBulletDamage"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "188"
						"linux" "204"
					}

					// WIN: Vector m_sightOrigin
					// LIN: Vector m_sightOrigin
					"m_sightOrigin"
					{
						"type" "vector"
						"windows" "192"
						"linux" "208"
					}

					// WIN: int m_spread
					// LIN: int m_spread
					"m_spread"
					{
						"type" "integer"
						"unsigned" "0"
						"windows" "204"
						"linux" "220"
					}

					// WIN: string_t m_iszMaster
					// LIN: int m_iszMaster
					"m_iszMaster"
					{
						"type" "stringint"
						"windows" "208"
						"linux" "224"
					}

				}
			}
		}
	}
}

//
// Class Hierarchy:
// -
//	CBaseEntity
//		CFuncTank
//			CFuncTankGun
//			CFuncTankLaser
//			CFuncTankMortar
//			CFuncTankRocket
//
